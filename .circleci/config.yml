version: 2

jobs:
  build:
    docker:
      - image: circleci/node:10.16
    resource_class: large
    steps:
      - checkout
      - restore_cache:
          key: node_modules-{{checksum "./package.json"}}-v10
      - run:
          name: "Print out versions"
          command: |
            echo "node -v = $(node -v)"
            echo "npm -v = $(npm -v)"
      - run:
          name: "Add private token to npmrc"
          command: echo "//npmregistry.density.rodeo/:_authToken=${PRIVATE_NPM_TOKEN}" >> ~/.npmrc
      - run:
          name: "Install dependencies"
          command: npm i
      - run:
          name: "Run tests"
          command: npm test
      - save_cache:
          key: node_modules-{{checksum "./package.json"}}-v10
          paths:
            - "./node_modules"

  preview:
    docker:
      - image: circleci/node:10.16
    resource_class: medium
    steps:
      - checkout
      - restore_cache:
          key: node_modules-{{checksum "./package.json"}}-v10
      - run:
          name: "Set preview url in package.json"
          command: |
            jq ".homepage = \"https://dashboard.density.rodeo/preview/${CIRCLE_SHA1}\"" package.json > /tmp/pkg
            mv /tmp/pkg package.json
      - run:
          name: "Build preview dashboard"
          command: |
            REACT_APP_ENVIRONMENT="staging" \
            NODE_ENV=production \
            npm run build
      - run:
          name: "Push preview dashboard"
          command: |
            echo "* Installing amazon's cli..."
            sudo apt install -y python-pip python-dev
            sudo pip install -U 'awscli>=1.15'

            echo "* Pushing to S3..."
            aws s3 sync build/ s3://dashboard.density.rodeo/preview/${CIRCLE_SHA1}/ --region us-east-1
            aws s3 cp build/index.html s3://dashboard.density.rodeo/preview/${CIRCLE_SHA1}/index.html --region us-east-1 --cache-control "no-cache"
      - run:
          name: "Post status to Github commit with link to preview dashboard."
          command: |
            curl -X POST \
            -d "{\"state\":\"success\", \"context\": \"ci/preview\", \"description\": \"Preview build generated!\", \"target_url\": \"https://dashboard.density.rodeo/preview/${CIRCLE_SHA1}\"}" \
            -H "Authorization: Bearer $GITHUB_MACHINE_USER_TOKEN" \
            https://api.github.com/repos/densityco/dashboard/statuses/${CIRCLE_SHA1}

  staging:
    docker:
      - image: circleci/node:10.16
    resource_class: small
    steps:
      - checkout
      - restore_cache:
          key: node_modules-{{checksum "./package.json"}}-v10
      - run:
          name: "Build staging dashboard"
          command: |
            # NOTE: These are not secrets, they're public identifiers that are built into the
            # final webapp.
            REACT_APP_MIXPANEL_TOKEN="eb87b138bbb5d556fcf53bebac24b935" \
            REACT_APP_GA_TRACKING_CODE="UA-77313135-1" \
            REACT_APP_INTERCOM_APP_ID="sr9uzcmq" \
            REACT_APP_ENVIRONMENT="staging" \
            REACT_APP_TEEM_CLIENT_ID="hlTZ1YouLjjF6oMAixxeZEfLnzms8VEj2vRn8deh" \
            REACT_APP_TEEM_REDIRECT_URL="https://core-staging.density.io/v2/integrations/teem/callback" \
            REACT_APP_SLACK_CLIENT_ID="2180757426.573398678673" \
            REACT_APP_SLACK_REDIRECT_URL="https://core-staging.density.io/v2/integrations/slack/redirect/" \
            NODE_ENV=production \
            npm run build
      - run:
          name: "Push staging dashboard"
          command: |
            echo "* Installing amazon's cli..."
            sudo apt install -y python-pip python-dev
            sudo pip install -U 'awscli>=1.15'

            echo "* Copying to S3..."
            aws s3 sync build/ s3://dashboard.density.rodeo/ --region us-east-1
            aws s3 cp build/index.html s3://dashboard.density.rodeo/index.html --region us-east-1 --cache-control "no-cache"
            aws cloudfront create-invalidation --distribution-id EJGYK3LXP76SR --paths "/"

  production:
    docker:
      - image: circleci/node:10.16
    resource_class: small
    steps:
      - checkout
      - restore_cache:
          key: node_modules-{{checksum "./package.json"}}-v10
      - run:
          name: "Build production dashboard"
          command: |
            # NOTE: These are not secrets, they're public identifiers that are built into the
            # final webapp.
            REACT_APP_MIXPANEL_TOKEN="eb87b138bbb5d556fcf53bebac24b935" \
            REACT_APP_GA_TRACKING_CODE="UA-77313135-1" \
            REACT_APP_INTERCOM_APP_ID="sr9uzcmq" \
            REACT_APP_ENVIRONMENT="production" \
            REACT_APP_HOTJAR_SITE_ID="1194280" \
            REACT_APP_TEEM_CLIENT_ID="0IChGtA59rkE8XgnceJNKPw7txgmGHang2QzezhF" \
            REACT_APP_TEEM_REDIRECT_URL="https://api.density.io/v2/integrations/teem/callback" \
            REACT_APP_SLACK_CLIENT_ID="2180757426.605792767669" \
            REACT_APP_SLACK_REDIRECT_URL="https://api.density.io/v2/integrations/slack/redirect/" \
            NODE_ENV=production \
            npm run build
      - run:
          name: "Push production dashboard"
          command: |
            echo "* Installing amazon's cli..."
            sudo apt install -y python-pip python-dev
            sudo pip install -U 'awscli>=1.15'

            echo "* Copying to S3..."
            aws s3 sync build/ s3://dashboard.density.io/ --region us-east-1
            aws s3 cp build/index.html s3://dashboard.density.io/index.html --region us-east-1 --cache-control "no-cache"
            aws cloudfront create-invalidation --distribution-id E99FO9O48YI9N --paths "/"


workflows:
  version: 2
  build-test-and-approval-deploy:
    jobs:
      - build

      # For all non-trunk pushes, build/deploy to `https://dashboard.density.rodeo/preview/SHA`
      - preview:
          requires:
            - build
          filters:
            branches:
              ignore: trunk
      # Trunk is built and deployed to `https://dashboard.density.rodeo`
      - staging:
          requires:
            - build
          filters:
            branches:
              only: trunk

      # Wait for someone to approve the change to move it into production
      - hold-production:
          type: approval
          requires:
            - staging

      - production:
          requires:
            - build
            - staging
            - hold-production
          filters:
            branches:
              only: trunk
