{
  "variables": {
    "core": "https://api.density.io/v1"
  },
  "resources": {
    "spaces": {
      "list": {
        "method": "GET",
        "url": "{{{core}}}/spaces/",
        "desc": "List all spaces.",
        "qs": {
          "detail": "{{detail}}"
        }
      },
      "get": {
        "method": "GET",
        "url": "{{{core}}}/spaces/{{id}}/",
        "desc": "Get a space by id."
      },
      "create": {
        "method": "POST",
        "url": "{{{core}}}/spaces/",
        "desc": "Create a space.",
        "headers": {
          "Content-Type": "application/json",
          "Accept": "application/json"
        },
        "body": {
          "name": "{{{name}}}",
          "description": "{{{description}}}",
          "timezone": "{{{timezone}}}",
          "daily_reset": "{{{daily_reset}}}"
        }
      },
      "update": {
        "method": "PUT",
        "url": "{{{core}}}/spaces/{{id}}/",
        "desc": "Update a space.",
        "headers": {
          "Content-Type": "application/json",
          "Accept": "application/json"
        },
        "body": {
          "name": "{{{name}}}",
          "description": "{{{description}}}",
          "time_zone": "{{{time_zone}}}",
          "daily_reset": "{{{daily_reset}}}",
          "capacity": "{{{capacity}}}"
        }
      },
      "delete": {
        "method": "DELETE",
        "url": "{{{core}}}/spaces/{{id}}",
        "desc": "Delete a space by id.",
        "headers": {
          "Content-Type": "application/json"
        },
        "body": {
          "name": "{{name}}"
        }
      },
      "counts": {
        "method": "GET",
        "url": "{{{core}}}/spaces/{{id}}/counts/",
        "desc": "Query counts over time for a space, at specified intervals. Includes analytics specifying the minimum and maximum count that was recorded in each interval.",
        "qs": {
          "start_time": "{{start_time}}",
          "end_time": "{{end_time}}",
          "interval": "{{interval}}",
          "page_size": "{{page_size}}",
          "time_segment_groups": "{{time_segment_groups}}",
          "page": "{{page}}",
          "order": "{{order}}",
          "slow": "{{slow}}"
        }
      },
      "allCounts": {
        "method": "GET",
        "url": "{{{core}}}/spaces/counts/",
        "desc": "Query counts over time for all spaces in the organization, at specified intervals. Includes analytics specifying the minimum and maximum count that was recorded in each interval.",
        "qs": {
          "start_time": "{{start_time}}",
          "end_time": "{{end_time}}",
          "interval": "{{interval}}",
          "page_size": "{{page_size}}",
          "time_segment_groups": "{{time_segment_groups}}",
          "page": "{{page}}",
          "order": "{{order}}",
          "slow": "{{slow}}"
        }
      },
      "events": {
        "method": "GET",
        "url": "{{{core}}}/spaces/{{id}}/events/",
        "desc": "Query individual traffic events over time for a space.",
        "qs": {
          "start_time": "{{start_time}}",
          "end_time": "{{end_time}}",
          "time_segment_groups": "{{time_segment_groups}}",
          "doorway_id": "{{doorway_id}}",
          "direction": "{{direction}}",
          "page_size": "{{page_size}}",
          "page": "{{page}}",
          "order": "{{order}}"
        }
      },
      "forecast": {
        "method": "GET",
        "url": "{{{core}}}/spaces/{{id}}/forecast/",
        "desc": "Query the api for forecasting data used to predict future counts.",
        "qs": {
          "period": "{{period}}",
          "page_size": "{{page_size}}",
          "time_segment_groups": "{{time_segment_groups}}"
        }
      },
      "reset": {
        "method": "POST",
        "url": "{{{core}}}/spaces/{{id}}/resets/",
        "headers": {
          "Content-Type": "application/json",
          "Accept": "application/json"
        },
        "body": {
          "count": "{{count}}",
          "timestamp": "{{timestamp}}"
        },
        "desc": "Creates a reset on a space."
      },
      "csvPreview": {
        "method": "GET",
        "url": "{{{base}}}/csv/",
        "desc": "Get first 10 events of csv export for a current space",
        "headers": {
          "Accept": "text/csv"
        },
        "qs": {
          "space_id": "{{space_id}}",
          "start_time": "{{start_time}}",
          "end_time": "{{end_time}}",
          "preview": "true"
        }
      },
      "csv": {
        "method": "GET",
        "url": "{{{base}}}/csv/",
        "desc": "Get csv export of events for a current space",
        "headers": {
          "Accept": "text/csv"
        },
        "qs": {
          "space_id": "{{space_id}}",
          "start_time": "{{start_time}}",
          "end_time": "{{end_time}}"
        }
      }
    },
    "doorways": {
      "list": {
        "method": "GET",
        "url": "{{{core}}}/doorways/",
        "desc": "List all doorways.",
        "qs": {
          "detail": "{{detail}}",
          "environment": "{{#environment}}True{{/environment}}",
          "page_size": "5000"
        }
      },
      "get": {
        "method": "GET",
        "url": "{{{core}}}/doorways/{{id}}/",
        "desc": "Get a doorway by id."
      },
      "create": {
        "method": "POST",
        "url": "{{{core}}}/doorways/",
        "desc": "Create a doorway.",
        "headers": {
          "Content-Type": "application/json",
          "Accept": "application/json"
        },
        "body": {
          "name": "{{name}}",
          "description": "{{description}}",
          "sensor_id": "{{sensor_id}}",
          "environment": {
            "width": "{{width}}",
            "height": "{{height}}",
            "clearance": "{{clearance}}",
            "power_type": "{{power_type}}"
          }
        }
      },
      "update": {
        "method": "PUT",
        "url": "{{{core}}}/doorways/{{id}}/",
        "desc": "Update a doorway.",
        "headers": {
          "Content-Type": "application/json",
          "Accept": "application/json"
        },
        "body": {
          "name": "{{name}}",
          "description": "{{description}}",
          "sensor_id": "{{sensor_id}}",
          "environment": {
            "width": "{{width}}",
            "height": "{{height}}",
            "clearance": "{{clearance}}",
            "power_type": "{{power_type}}"
          }
        }
      },
      "delete": {
        "method": "DELETE",
        "url": "{{{core}}}/doorways/{{id}}",
        "desc": "Delete a doorway by id."
      }
    },
    "events": {
      "list": {
        "method": "GET",
        "url": "{{{core}}}/events/",
        "qs": {
          "start_time": "{{start_time}}",
          "end_time": "{{end_time}}",
          "space_id": "{{space_id}}",
          "doorway_id": "{{doorway_id}}",
          "sensor_id": "{{sensor_id}}",
          "page_size": "{{page_size}}",
          "page": "{{page}}"
        },
        "desc": "List all events. Takes a 'space_id', 'start_time', 'end_time', and 'doorway_id'"
      }
    },
    "resets": {
      "list": {
        "method": "GET",
        "url": "{{{core}}}/resets/",
        "qs": {
          "start_time": "{{start_time}}",
          "end_time": "{{end_time}}",
          "space_id": "{{space_id}}",
          "page_size": "{{page_size}}",
          "page": "{{page}}"
        },
        "desc": "List all events. Takes a 'space_id', 'start_time', 'end_time', and 'doorway_id'"
      }
    },
    "sensors": {
      "list": {
        "method": "GET",
        "url": "{{{core}}}/sensors/",
        "qs": {
          "start_time": "{{start_time}}",
          "end_time": "{{end_time}}",
          "space_id": "{{id}}",
          "shadow": "{{shadow}}",
          "page_size": "5000"
        },
        "desc": "List all sensors."
      },
      "get": {
        "method": "GET",
        "url": "{{{core}}}/sensors/{{id}}",
        "desc": "Get a sensor by id."
      },
      "delete": {
        "method": "DELETE",
        "url": "{{{core}}}/sensors/{{id}}",
        "desc": "Delete a sensor by id."
      }
    },
    "links": {
      "list": {
        "method": "GET",
        "url": "{{{core}}}/links/",
        "desc": "List all links.",
        "qs": {
          "space_id": "{{space_id}}",
          "doorway_id": "{{doorway_id}}",
          "page_size": "5000"
        }
      },
      "get": {
        "method": "GET",
        "url": "{{{core}}}/links/{{id}}/",
        "desc": "Get a link by id."
      },
      "create": {
        "method": "POST",
        "url": "{{{core}}}/links/",
        "desc": "Create a new link.",
        "headers": {
          "Content-Type": "application/json",
          "Accept": "application/json"
        },
        "body": {
          "space_id": "{{space_id}}",
          "doorway_id": "{{doorway_id}}",
          "sensor_placement": "{{sensor_placement}}"
        }
      },
      "update": {
        "method": "PUT",
        "url": "{{{core}}}/links/{{id}}/",
        "desc": "Update a link's sensor placement.",
        "headers": {
          "Content-Type": "application/json",
          "Accept": "application/json"
        },
        "body": {
          "sensor_placement": "{{sensor_placement}}"
        }
      },
      "delete": {
        "method": "DELETE",
        "url": "{{{core}}}/links/{{id}}/",
        "desc": "Delete a link."
      }
    },
    "webhooks": {
      "list": {
        "method": "GET",
        "url": "{{{core}}}/webhooks/",
        "desc": "List all webhooks.",
        "page_size": "5000"
      },
      "get": {
        "method": "GET",
        "url": "{{{core}}}/webhooks/{{id}}/",
        "desc": "Get a webhook by id."
      },
      "create": {
        "method": "POST",
        "url": "{{{core}}}/webhooks/",
        "desc": "Create a new webhook.",
        "headers": {
          "Content-Type": "application/json",
          "Accept": "application/json"
        },
        "body": {
          "name": "{{{name}}}",
          "description": "{{{description}}}",
          "endpoint": "{{{endpoint}}}"
        }
      },
      "update": {
        "method": "PUT",
        "url": "{{{core}}}/webhooks/{{id}}/",
        "desc": "Update a webhook's endpoint.",
        "headers": {
          "Content-Type": "application/json",
          "Accept": "application/json"
        },
        "body": {
          "name": "{{{name}}}",
          "description": "{{{description}}}",
          "endpoint": "{{{endpoint}}}"
        }
      },
      "delete": {
        "method": "DELETE",
        "url": "{{{core}}}/webhooks/{{id}}/",
        "desc": "Delete a webhook."
      }
    },
    "sockets": {
      "create": {
        "method": "POST",
        "url": "{{{core}}}/sockets",
        "desc": "Create a new socket connection.",
        "headers": {
          "Content-Type": "application/json",
          "Accept": "application/json"
        }
      }
    },
    "time_segment_groups": {
      "list": {
        "method": "GET",
        "url": "{{{core}}}/time_segment_groups/",
        "desc": "List all time segment groups."
      },
      "get": {
        "method": "GET",
        "url": "{{{core}}}/time_segment_groups/{{id}}",
        "desc": "Get details for a time segment group."
      }
    },
    "dashboards": {
      "list": {
        "method": "GET",
        "url": "{{{core}}}/dashboards/",
        "desc": "List all dashboards."
      },
      "detail": {
        "method": "GET",
        "url": "{{{core}}}/dashboards/{{id}}",
        "desc": "Fetch a dashboard."
      }
    },
    "digest_schedules": {
      "list": {
        "method": "GET",
        "url": "{{{core}}}/digest_schedules/",
        "desc": "List all digest schedules."
      },
      "delete": {
        "method": "DELETE",
        "url": "{{{core}}}/digest_schedules/{{id}}",
        "desc": "Delete the given digest schedule."
      }
    }
  }
}
